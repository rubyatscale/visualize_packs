digraph package_diagram {
  graph [
    labelloc="t"
    fontname="Helvetica,Arial,sans-serif"
    dpi=100
    layout=dot
    label="Visualization of <%= all_packages.count %> packs, generated using `bin/packs`",
    fontsize=24
  ]
  node [
    fontname="Helvetica,Arial,sans-serif"
    fontsize=26.0
    fontcolor=black
    fillcolor=white
    color=black
    height=1.0
    style=filled
    shape=plain
  ]

  <% config.raw['architecture_layers'].each_with_index do |layer_name, index| %>
    subgraph <%= layer_name %> {
      shape=box
      color=darkgrey
      fillcolor=lightblue
      style=filled

      <% if layer_name != "NotInLayer" %>
        label="<%= layer_name %>"
        cluster=true
        rank = <%= index %>
      <% end %>

      <% grouped_packages[layer_name].each do |package| %>
        "<%= package.name %>" [
            label= <% if package.enforce_privacy %>
              <
                <table border='0' cellborder='1' cellspacing='0' cellpadding='16'><tr><td>
                  <table border='0' cellborder='1' cellspacing='0' cellpadding='4'>
                    <tr> <td port='private'> <%= package.name %> </td> </tr>
                  </table>
                </td></tr></table>
              >
            <% else %>
              <
                <table border='0' cellborder='1' cellspacing='0' cellpadding='4'>
                  <tr> <td port='private' align='left'> <%= package.name %> </td> </tr>
                </table>
              >
            <% end %>
    
          ]

          <% if index > 0 %>
          <% grouped_packages[config.raw['architecture_layers'][index - 1]].each do |upper_layer_node| %>
            "<%= upper_layer_node.name %>" -> "<%= package.name %>" [
              style=invis
              minlen=20
            ]
          <% end %>
        <% end %>
      <% end %>  
    }
  <% end %>

  <% all_packages.each do |package| %>
    <% package.dependencies.each do |to_package| %>
      "<%= package.name %>" -> "<%= to_package %>" [
        color=darkgreen
      ]
    <% end %>
  <% end %>

  <% all_packages.each do |package| %>
    <% violations_by_package = package.violations.group_by(&:to_package_name) %>
    <% violations_by_package.keys.each do |violations_to_package| %>
      <% violation_types = violations_by_package[violations_to_package].group_by(&:type) %>
      <% violation_types.keys.each do |violation_type| %>
        "<%= package.name %>" -> "<%= violations_to_package %>"<%= violation_type == 'privacy' ? ':private' : '' %> [
          color=darkred
          style=dashed
          constraint=false
          # headlabel="<%= violation_type %>"
          <% if violation_type == 'privacy' %>
            arrowhead=crow
          <% elsif violation_type == 'architecture' %>
            arrowhead=invodot
          <% elsif violation_type == 'visibility' %>
            arrowhead=obox
          <% elsif violation_type == 'dependency' %>
            arrowhead=odot
          <% end %>
          <%
            max_edge_width = 10

            edge_width = [
              [(violation_types[violation_type].count / 5).to_i, 1].max, # rubocop:disable Lint/NumberConversion
              max_edge_width,
            ].min
          %>
          penwidth=<%= edge_width %>
        ]
      <% end %>
    <% end %>
  <% end %>

  subgraph cluster_legend {
    rankdir=LR
    label="Legend"

    A [ fontsize=12 shape=box label="package"]
    B [ fontsize=12 shape=box label="package"]
    C [ fontsize=12 shape=box label="package"]
    D [ fontsize=12 shape=box label="package"]
    E [ fontsize=12 shape=box label="package"]
    F [ fontsize=12 shape=box label="package"]
    G [ fontsize=12 shape=box label="package"]
    H [ fontsize=12 shape=box label="package"]
    I [ fontsize=12 shape=box label="package"]
    J [ fontsize=12 shape=box label="package"]

    A -> B [label="accepted dependency" color=darkgreen]
    C -> D [label="privac todo" color=darkred style=dashed arrowhead=crow]
    E -> F [label="architecture todo" color=darkred style=dashed arrowhead=invodot]
    G -> H [label="visibility todo" color=darkred style=dashed arrowhead=obox]
    I -> J [label="dependency todo" color=darkred style=dashed arrowhead=odot]
  }
}